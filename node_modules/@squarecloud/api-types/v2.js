"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// v2.ts
var v2_exports = {};
__export(v2_exports, {
  APINetworkDNSStatus: () => APINetworkDNSStatus,
  ApplicationId: () => ApplicationId,
  ApplicationLanguage: () => ApplicationLanguage,
  ApplicationStatus: () => ApplicationStatus,
  DeploymentState: () => DeploymentState,
  FileType: () => FileType,
  UserId: () => UserId,
  UserPlanName: () => UserPlanName
});
module.exports = __toCommonJS(v2_exports);

// common/v2.ts
var UserId = (id) => id;
var ApplicationId = (id) => id;

// payloads/v2/application.ts
var ApplicationLanguage = {
  JavaScript: "javascript",
  TypeScript: "typescript",
  Python: "python",
  Java: "java",
  Elixir: "elixir",
  Go: "go",
  Rust: "rust",
  PHP: "php",
  Dotnet: "dotnet",
  Static: "static"
};

// payloads/v2/deploy.ts
var DeploymentState = {
  Pending: "pending",
  Clone: "clone",
  Success: "success",
  Error: "error"
};

// payloads/v2/files.ts
var FileType = {
  File: "file",
  Directory: "directory"
};

// payloads/v2/network.ts
var APINetworkDNSStatus = {
  Pending: "pending",
  PendingValidation: "pending_validation",
  Active: "active"
};

// payloads/v2/status.ts
var ApplicationStatus = {
  Exited: "exited",
  Created: "created",
  Starting: "starting",
  Restarting: "restarting",
  Deleting: "deleting",
  Running: "running"
};

// payloads/v2/user.ts
var UserPlanName = {
  Free: "free",
  Hobby: "hobby",
  Standard: "standard",
  Advanced: "advanced",
  Pro: "pro",
  Enterprise: (size) => `enterprise-${size}`
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  APINetworkDNSStatus,
  ApplicationId,
  ApplicationLanguage,
  ApplicationStatus,
  DeploymentState,
  FileType,
  UserId,
  UserPlanName
});
//# sourceMappingURL=v2.js.map