{"version":3,"sources":["v2.ts"],"sourcesContent":["import type { Brand } from \"../utils\";\n\nexport type APIPayloadStatus = \"error\" | \"success\";\n\nexport interface APIPayload<TResponse> {\n\tstatus: APIPayloadStatus;\n\tresponse: TResponse;\n\tcode?: string;\n}\n\nexport interface APIPayloadStatusOnly {\n\tstatus: APIPayloadStatus;\n}\n\nexport interface APIHeaders {\n\tAuthorization: string;\n}\n\nexport type APIVersion<TVersion extends number> = `v${TVersion}`;\n\nexport type ISODateString = string;\n\nexport type UserId = string & Brand<\"UserId\">;\nexport const UserId = (id: string): UserId => id as UserId;\n\nexport type ApplicationId = string & Brand<\"ApplicationId\">;\nexport const ApplicationId = (id: string): ApplicationId => id as ApplicationId;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuBO,IAAM,SAAS,CAAC,OAAuB;AAGvC,IAAM,gBAAgB,CAAC,OAA8B;","names":[]}