var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);

// src/services/cache/base.ts
var BaseCacheService = class {
  constructor() {
    __publicField(this, "cache");
  }
  set(key, value) {
    Reflect.set(this, key, value);
  }
  get(key) {
    return this.cache[key];
  }
  remove(key) {
    Reflect.set(this.cache, key, void 0);
  }
};
export {
  BaseCacheService
};
//# sourceMappingURL=base.mjs.map