{"version":3,"sources":["../../../src/services/cache/application.ts","../../../src/services/cache/base.ts"],"sourcesContent":["import type { APIApplicationBackup } from \"@squarecloud/api-types/v2\";\n\nimport type { ApplicationStatus } from \"@/structures\";\nimport { BaseCacheService } from \"./base\";\n\nexport interface ApplicationCache {\n\treadonly status?: ApplicationStatus;\n\treadonly backups?: APIApplicationBackup[];\n\treadonly logs?: string;\n}\n\nexport class ApplicationCacheService extends BaseCacheService<ApplicationCache> {\n\tprotected cache: ApplicationCache = {\n\t\tstatus: undefined,\n\t\tbackups: undefined,\n\t\tlogs: undefined,\n\t};\n\n\tget status() {\n\t\treturn this.cache.status;\n\t}\n\n\tget backups() {\n\t\treturn this.cache.backups;\n\t}\n\n\tget logs() {\n\t\treturn this.cache.logs;\n\t}\n}\n","export class BaseCacheService<\n\tStruct extends object,\n\tKeys extends keyof Struct = keyof Struct,\n> {\n\tprotected cache: Struct;\n\n\tset<T extends Keys>(key: T, value: Struct[T]) {\n\t\tReflect.set(this, key, value);\n\t}\n\n\tget<T extends Keys>(key: T): Struct[T] {\n\t\treturn this.cache[key];\n\t}\n\n\tremove<T extends Keys>(key: T) {\n\t\tReflect.set(this.cache, key, undefined);\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAO,IAAM,mBAAN,MAGL;AAAA,EAHK;AAIN,wBAAU;AAAA;AAAA,EAEV,IAAoB,KAAQ,OAAkB;AAC7C,YAAQ,IAAI,MAAM,KAAK,KAAK;AAAA,EAC7B;AAAA,EAEA,IAAoB,KAAmB;AACtC,WAAO,KAAK,MAAM,GAAG;AAAA,EACtB;AAAA,EAEA,OAAuB,KAAQ;AAC9B,YAAQ,IAAI,KAAK,OAAO,KAAK,MAAS;AAAA,EACvC;AACD;;;ADNO,IAAM,0BAAN,cAAsC,iBAAmC;AAAA,EAAzE;AAAA;AACN,wBAAU,SAA0B;AAAA,MACnC,QAAQ;AAAA,MACR,SAAS;AAAA,MACT,MAAM;AAAA,IACP;AAAA;AAAA,EAEA,IAAI,SAAS;AACZ,WAAO,KAAK,MAAM;AAAA,EACnB;AAAA,EAEA,IAAI,UAAU;AACb,WAAO,KAAK,MAAM;AAAA,EACnB;AAAA,EAEA,IAAI,OAAO;AACV,WAAO,KAAK,MAAM;AAAA,EACnB;AACD;","names":[]}