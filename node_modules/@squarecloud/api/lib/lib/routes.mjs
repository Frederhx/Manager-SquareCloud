// src/lib/routes.ts
var Route = (route) => route;
var Routes = {
  user: () => {
    return Route("/v2/users/me");
  },
  service: {
    status: () => {
      return Route("/v2/service/status");
    }
  },
  apps: {
    upload: () => {
      return Route("/v2/apps");
    },
    statusAll: () => {
      return Route("/v2/apps/status");
    },
    info: (appId) => {
      return Route(`/v2/apps/${appId}`);
    },
    status: (appId) => {
      return Route(`/v2/apps/${appId}/status`);
    },
    logs: (appId) => {
      return Route(`/v2/apps/${appId}/logs`);
    },
    delete: (appId) => {
      return Route(`/v2/apps/${appId}`);
    },
    commit: (appId) => {
      return Route(`/v2/apps/${appId}/commit`);
    },
    backups: (appId) => {
      return Route(`/v2/apps/${appId}/backups`);
    },
    generateBackup: (appId) => {
      return Route(`/v2/apps/${appId}/backups`);
    },
    start: (appId) => {
      return Route(`/v2/apps/${appId}/start`);
    },
    restart: (appId) => {
      return Route(`/v2/apps/${appId}/restart`);
    },
    stop: (appId) => {
      return Route(`/v2/apps/${appId}/stop`);
    },
    files: {
      read: (appId) => {
        return Route(`/v2/apps/${appId}/files/content`);
      },
      list: (appId) => {
        return Route(`/v2/apps/${appId}/files`);
      },
      upsert: (appId) => {
        return Route(`/v2/apps/${appId}/files`);
      },
      move: (appId) => {
        return Route(`/v2/apps/${appId}/files`);
      },
      delete: (appId) => {
        return Route(`/v2/apps/${appId}/files`);
      }
    },
    deployments: {
      list: (appId) => {
        return Route(`/v2/apps/${appId}/deployments`);
      },
      current: (appId) => {
        return Route(
          `/v2/apps/${appId}/deployments/current`
        );
      },
      webhook: (appId) => {
        return Route(
          `/v2/apps/${appId}/deploy/webhook`
        );
      }
    },
    network: {
      dns: (appId) => {
        return Route(`/v2/apps/${appId}/network/dns`);
      },
      custom: (appId) => {
        return Route(`/v2/apps/${appId}/network/custom`);
      },
      analytics: (appId) => {
        return Route(
          `/v2/apps/${appId}/network/analytics`
        );
      }
    }
  }
};
export {
  Route,
  Routes
};
//# sourceMappingURL=routes.mjs.map